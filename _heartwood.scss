// based on this article https://css-tricks.com/rems-ems/
@import 'bower_components/modular-scale/stylesheets/modular-scale';

// Defaults
$base-font-size: 62.5% !default;
$body-copy-color: #2d2d2d !default;

$underline-background-color: #fff !default;
$link-color: $body-copy-color !default;
$link-color-active: lighten($body-copy-color, 10%) !default;
$link-underline-color: $link-color !default;
$link-underline-color-active: $link-color-active !default;
$link-underline-width: 1px !default;
$link-underline-offset: 2px !default;

$headings-font-family: 'Roboto', helvetica, sans-serif !default;
$body-font-family: 'Roboto', helvetica, sans-serif !default;
$code-font-family: 'Source Sans Pro', monospace, sans-serif !default;
$type-margins: true !default;
$ms-base: 1em ;
$ms-ratio: $fourth ;

// Strip units so that the result
// can be used with em's and px's
@function su($number) {
  @return $number / ($number * 0 + 1);
}
// @debug ms-list(1, 6, $ms-base, $ms-ratio);

@mixin document-type() {
  font-size: $base-font-size;
  color: $body-copy-color;
}

@mixin module-type( $font-size-multiplier: 1 ) {
  font-size: $font-size-multiplier * 10px;
  font-size: $font-size-multiplier + rem;
}

@mixin element-type( $font-size-multiplier: 1.6 ) {
  font-size: $font-size-multiplier * 10px;
  font-size: $font-size-multiplier + em;
}

// Mixin to remove margins from headings
// and p elements if $type-margins is true
@mixin margin($margin...) {
  @if $type-margins == false {
    margin: 0;
  }
  @else {
    margin: $margin;
  }
}

@mixin p($font-size-multiplier: 1.8) {
  font-family: $body-font-family;
  @include element-type($font-size-multiplier);
  letter-spacing: .01rem;
  font-weight: 400;
  line-height: 1.5;
  @include margin(0 0 1em 0);
  text-rendering: optimizeSpeed;
}

@mixin dropcap($drop-lines, $drop-line-height) {
  $drop-size : $drop-line-height * $drop-lines;
  &:first-child:first-letter {
    font-size: #{$drop-size+'em'};
    vertical-align: bottom;
    float: left;
    line-height: 0.9;
    margin-right: 0.5rem;
    margin-left: -0.05rem;
    margin-top: -0.05rem;
  }
}

@mixin fancy-underlines-bg($color: $link-underline-color, $weight: $link-underline-width, $offset: $link-underline-offset) {
  background-image: linear-gradient(to top, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0) $offset, $color $offset, $color $offset + $weight, rgba(0, 0, 0, 0) $offset + $weight);
}

@mixin fancy-underlines {
  text-decoration: none;
  text-shadow: -1px -1px 0 $underline-background-color, 1px -1px 0 $underline-background-color, -1px 1px 0 $underline-background-color, 1px 1px 0 $underline-background-color;
  @include fancy-underlines-bg($link-color);
  @media (-webkit-min-device-pixel-ratio: 1.5), (min-resolution: 144dpi) {
    @include fancy-underlines-bg($link-color, 0.5);
  }
  &:hover, &:focus {
    @include fancy-underlines-bg($link-color-active);
    @media (-webkit-min-device-pixel-ratio: 1.5), (min-resolution: 144dpi) {
      @include fancy-underlines-bg($link-color-active, 0.5);
    }
  }
}

@mixin a($underlines: fancy, $font-size-multiplier: 1.8) {
  font-family: $body-font-family;
  @include module-type($font-size-multiplier);
  color: $body-copy-color;
  letter-spacing: .01rem;
  font-weight: 400;
  line-height: 1.5;
  @include margin(0 0 1em 0);
  text-rendering: optimizeSpeed;
  cursor: pointer;

  @if $underlines == fancy {
    @include fancy-underlines;
  }
  @else if $underlines == simple {
    text-decoration: underline;
    &:hover {
      color: $link-color-active;
    }
  }
}

@mixin h($heading-level, $heading-weight: 400) {
    font-family: $headings-font-family;
    line-height: 1.25;
    @include margin(1em 0 .5em 0);
    text-rendering: optimizeLegibility;


    @if $heading-level == 1 {
      @include element-type(su(ms(5)));
      letter-spacing: .2rem;
      font-weight: $heading-weight;
    }
    @else if $heading-level == 2 {
      @include element-type(su(ms(4)));
      letter-spacing: .15rem;
      font-weight: $heading-weight;
    }
    @else if $heading-level == 3 {
      @include element-type(su(ms(3)));
      letter-spacing: .05rem;
      font-weight: $heading-weight;
    }
    @else if $heading-level == 4 {
      @include element-type(su(ms(2)));
      letter-spacing: .02rem;
      font-weight: $heading-weight;
    }
    @else if $heading-level == 5 {
      @include element-type(su(ms(1)));
      font-weight: $heading-weight;
    }
    @else if $heading-level == 6 {
      @include element-type(su(ms(0)));
      font-weight: $heading-weight;
    }
    @else {
      @error "Please provide a valid heading value between 1 and 6";
    }
}

@mixin code {
  font-family: $code-font-family;
  @include element-type(1.45);
  @include margin(0 0 1em 0);
}

@mixin hr {
  margin: 1em 0;
  border-style: solid;
  color: currentColor;
}

@mixin blockquote($decoration: '') {
  font-family: $body-font-family;
  @include element-type(1.8);
  font-style: italic;
  @include margin(1em 0);
  @if $decoration == border {
    border-left: 2px solid $body-copy-color;
    padding-left: 1em;
  }
  @else if $decoration == quote {
    &:before {
      content: "\201C";
      @include element-type(2);
      margin-left: -15px;
    }
  }
}

@mixin list {
  font-family: $body-font-family;
  @include element-type;
}

@mixin list-reset {
  list-style: none;
  padding-left: 0;
}
